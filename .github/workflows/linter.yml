---
###########################
###########################
## Linter GitHub Actions ##
###########################
###########################
name: Lint Code Base

#
# Documentation:
# https://help.github.com/en/articles/workflow-syntax-for-github-actions
#

#############################
# Start the job on all push #
#############################
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

###############
# Set the Job #
###############
jobs:
  build:
    # Name the Job
    name: Lint Code Base
    # Set the agent to run on
    runs-on: ubuntu-latest

    ###################
    # Python versions #
    ###################
    strategy:
      matrix:
        python-version: [3]
    
    ##################
    # Load all steps #
    ##################
    steps:

      ##########################
      # Checkout the code base #
      ##########################
      - name: Checkout Code
        uses: actions/checkout@master

      #########################
      # Pick a Python version #
      #########################
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      ##############################
      # Set up a Python virtualenv #
      ##############################
      - name: Set up Python virtual environment
        run: |
          python -m venv python${{ matrix.python-version }}-venv
          source python${{ matrix.python-version }}-venv/bin/activate
          # echo "::set-env name=PATH::$HOME/python${{ matrix.python-version }}-venv/bin/"
          echo "::add-path::$HOME/python${{ matrix.python-version }}-venv/bin"
          echo "::set-env name=pythonLocation::$HOME/python${{ matrix.python-version }}-venv"

      ########################
      # Install dependencies #
      ########################
      - name: Install dependencies
        run: |
          sudo apt-get install build-essential python-dev libnetfilter-queue-dev
          python -m pip install --upgrade pip
          pip install setuptools wheel flake8 pytest

      ##############################
      # Install data-plane modules #
      ##############################
      - name: Install data-plane modules
        run: |
          python setup.py install

      ################################
      # Run Linter against code base #
      ################################
      - name: Python Code Quality and Lint
        uses: ricardochaves/python-lint@v1.1.0
        with:
          # A list of all paths to test
          python-root-list: data_plane  # optional, default is .
          # Use Pylint
          #use-pylint: # optional, default is true
          # Use pycodestyle
          #use-pycodestyle: # optional, default is true
          # Use Flake8
          #use-flake8: # optional, default is true
          # Use Black
          #use-black: # optional, default is true
          # Use mypy
          #use-mypy: # optional, default is true
          # Use isort
          #use-isort: # optional, default is true
          # Extra options: pylint $(extra-pylint-options) $(python-root-list)
          #extra-pylint-options: # optional, default is 
          # Extra options: pycodestyle $(extra-pycodestyle-options) $(python-root-list)
          #extra-pycodestyle-options: # optional, default is 
          # Extra options: flake8 $(extra-flake8-options) $(python-root-list)
          #extra-flake8-options: # optional, default is 
          # Extra options: black --check $(extra-black-options) $(python-root-list)
          #extra-black-options: # optional, default is 
          # Extra options: mypy $(extra-mypy-options) $(python-root-list)
          #extra-mypy-options: # optional, default is 
          # Extra options: isort -rc $(extra-isort-options) $(python-root-list) -c --diff 
          #extra-isort-options: # optional, default is 
