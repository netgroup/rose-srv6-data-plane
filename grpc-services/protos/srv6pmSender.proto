syntax = "proto3";
package srv6pm;
import "srv6pmCommons.proto";

service SRv6PMSender {
    // start an experiment
    rpc startExperiment (StartExperimentSenderRequest) returns (StartExperimentSenderReply) {}
    // stop am experiment
    rpc stopExperiment (StopExperimentRequest) returns (StopExperimentReply) {}
    // retrive data of an experiment
    rpc retriveExperimentResults (RetriveExperimentDataRequest) returns (ExperimentDataResponse) {}

}

// The SRv6EPRequest message containing a number of paths.
message SRv6EPRequestSender {
    string prefix= 1;
    string encapmode = 2;
    string segments = 3;
    string device = 4;

}

// The SRv6EPReply message containing a simple status message
message SRv6EPReplySender{
    StatusCode status = 250;
}



message StartExperimentSenderRequest {
    string sdlist = 1;
    SenderOptions sender_options = 2;
    ColorOptions color_options = 3;
}

message StartExperimentSenderReply {
    StatusCode status = 1;
}

message SenderOptions {
    MesurementProtocol mesurement_protocol = 1;
    uint32 dst_udp_port = 2;
    AuthenticationMode authentication_mode = 3;
    MesurementType mesurement_type = 4;
    TimestampFormat timestamp_format = 5;
    MesurementDelayMode mesurement_delay_mode = 6;
    uint32 padding_mbz = 7;
    MesurementLossMode mesurement_loss_mode = 8;
}
